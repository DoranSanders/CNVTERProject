import java.util.Map;
import java.util.HashMap;

public class WeightCNV {
    //assigning conversion rates
    private static final double UsToEuro = 0.453592;
    private static final double UsToCad = 0.453592;
    private static final double UsToMex = 0.453592;

    private static final double EuroToUS = 2.20462;
    private static final double CadToUS = 2.20462;
    private static final double MexToUS = 2.20462;
    //Might have to switch numbers around depending on my code we will se in the future
    //create mapping for the weight conversion
    private static final Map<String, Map<String, Double>> ConvRates = new HashMap<>();

    static {
        Map<String, Double> UsRates = new HashMap<>();
        UsRates.put("European", UsToEuro);
        UsRates.put("Canadian", UsToCad);
        UsRates.put("Mexico", UsToMex);

        Map<String, Double> EuroRates = new HashMap<>();
        EuroRates.put("United States", EuroToUS);

        Map<String, Double> CanadianRates = new HashMap<>();
        CanadianRates.put("United States", CadToUS);

        Map<String, Double> MexicanRates = new HashMap<>();
        MexicanRates.put("United States", MexToUS);

        ConvRates.put("United States", UsRates);
        ConvRates.put("European", EuroRates);
        ConvRates.put("Mexican", MexicanRates);
        ConvRates.put("Canadian", CanadianRates);
    }

    // Function to convert weight from one unit to another
    public static double convertWeight(double weight, String fromUnit, String toUnit) {
        // Retrieve conversion rate from the ConvRates map
        Map<String, Double> fromRates = ConvRates.get(fromUnit);
        if (fromRates == null) {
            System.out.println("Conversion rates for " + fromUnit + " not found.");
            return -1; // or throw an exception
        }

        Double conversionRate = fromRates.get(toUnit);
        if (conversionRate == null) {
            System.out.println("Conversion rate from " + fromUnit + " to " + toUnit + " not found.");
            return -1; // or throw an exception
        }

        // Perform conversion
        return weight * conversionRate;
    }
}
